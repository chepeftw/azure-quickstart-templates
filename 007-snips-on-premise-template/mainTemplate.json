{
  "contentVersion": "1.0.0.0", 
  "parameters": {
    "vaultSecretNetworkProxyProtocol": {
      "defaultValue": "http", 
      "type": "string", 
      "metadata": {
        "description": "The protocol for the proxy used to download the Snips assistant, it can be either http or https."
      }
    }, 
    "vaultSecretNetworkProxyPassword": {
      "defaultValue": "", 
      "type": "string", 
      "metadata": {
        "description": "The password for authentication, if present, for the proxy used to download the Snips assistant. The proxy password depends on the proxy user for it to work."
      }
    }, 
    "vaultSecretNetworkProxyUser": {
      "defaultValue": "", 
      "type": "string", 
      "metadata": {
        "description": "The username for authentication, if present, for the proxy used to download the Snips assistant. The proxy user depends on the proxy password for it to work."
      }
    }, 
    "authenticationType": {
      "defaultValue": "password", 
      "allowedValues": [
        "password", 
        "sshPublicKey"
      ], 
      "type": "string", 
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      }
    }, 
    "vaultSecretTokenValue": {
      "defaultValue": "your-snips-token-from-the-snips-console", 
      "type": "string", 
      "metadata": {
        "description": "The token provided by Snips through the Snips console."
      }
    }, 
    "vaultSecretNetworkProxyHost": {
      "defaultValue": "", 
      "type": "string", 
      "metadata": {
        "description": "The host for the proxy used to download the Snips assistant. The proxy host depends on the proxy port for it to work."
      }
    }, 
    "adminUsername": {
      "type": "string", 
      "metadata": {
        "description": "User name for the Virtual Machines."
      }
    }, 
    "keyVaultName": {
      "defaultValue": "keyvault-snips-01", 
      "type": "string", 
      "metadata": {
        "description": "Name of the Vault which MUST be between 3 and 24 characters."
      }
    }, 
    "adminPasswordOrKey": {
      "type": "securestring", 
      "metadata": {
        "description": "Password or ssh key for the Virtual Machine."
      }
    }, 
    "capacity": {
      "defaultValue": 1, 
      "type": "int", 
      "maxValue": 20, 
      "metadata": {
        "description": "Number of VM instances (20 or less)."
      }
    }, 
    "dnsNameForPublicIP": {
      "defaultValue": "vmss-snips-dns", 
      "type": "string", 
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the load balancer."
      }
    }, 
    "vmssName": {
      "minLength": 3, 
      "defaultValue": "vmss-snips", 
      "metadata": {
        "description": "Name of the Virtual Machine Scale Set (VMSS)."
      }, 
      "type": "string", 
      "maxLength": 61
    }, 
    "imageUrl": {
      "defaultValue": "", 
      "type": "string", 
      "metadata": {
        "description": "Url for the VHD location in the Azure Storage."
      }
    }, 
    "production": {
      "defaultValue": false, 
      "allowedValues": [
        false, 
        true
      ], 
      "type": "bool", 
      "metadata": {
        "description": "Select whether the deployment should be in production or not. If its in prod, then the an image from the Marketplace will be used, otherwise it will use the imageUrl parameter."
      }
    }, 
    "vaultSecretInstancesNumberValue": {
      "defaultValue": "8", 
      "type": "string", 
      "metadata": {
        "description": "This is not for the final solution, but only for debugging and benchmarking purposes. As the names implies ... it is the magic number!"
      }
    }, 
    "vaultSecretNetworkProxyPort": {
      "defaultValue": "", 
      "type": "string", 
      "metadata": {
        "description": "The port for the proxy used to download the Snips assistant. The proxy port depends on the proxy host for it to work."
      }
    }, 
    "vmSize": {
      "defaultValue": "Standard_DS11-1_v2", 
      "metadata": {
        "description": "Size of the virtual machines inside the VMSS."
      }, 
      "type": "string", 
      "allowedValues": [
        "Standard_DS11-1_v2", 
        "Standard_DS11_v2", 
        "Standard_DS12_v2", 
        "Standard_DS13_v2", 
        "Standard_DS1_v2", 
        "Standard_DS2_v2", 
        "Standard_DS3_v2", 
        "Standard_DS4_v2", 
        "Standard_D2s_v3", 
        "Standard_D4s_v3", 
        "Standard_D8s_v3", 
        "Standard_D16s_v3"
      ]
    }
  }, 
  "outputs": {
    "resourceGroup": {
      "type": "string", 
      "value": "[resourceGroup().name]"
    }, 
    "snipsGlobalIp": {
      "type": "string", 
      "value": "[reference(variables('network').publicIPAddressName).ipAddress]"
    }, 
    "subscriptionId": {
      "type": "string", 
      "value": "[subscription().subscriptionId]"
    }, 
    "snipsDnsUrl": {
      "type": "string", 
      "value": "[reference(variables('network').publicIPAddressName).dnsSettings.fqdn]"
    }
  }, 
  "variables": {
    "fePoolName": "[concat(variables('lbName'), '-fepool')]", 
    "instanceCount": "2", 
    "cloudpartner": {
      "skuName": "single-byol-vm", 
      "publisherName": "snips", 
      "offerName": "on-server-vm", 
      "versionName": "latest"
    }, 
    "lbName": "[concat(parameters('vmssName'), '-lb')]", 
    "linuxConfiguration": {
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]", 
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }, 
      "disablePasswordAuthentication": true
    }, 
    "diagStorageAccountName": "[concat('strg', uniquestring(resourceGroup().id))]", 
    "network": {
      "addressPrefix": "10.0.0.0/16", 
      "publicIPAddressName": "[concat(parameters('vmssName'), '-publicIp')]", 
      "nicName": "[concat(parameters('vmssName'), 'nic')]", 
      "ipConfigName": "[concat(parameters('vmssName'), 'ipconfig')]", 
      "natPoolName": "[concat(variables('lbName'), 'natpool')]", 
      "subnetName": "subnet-1", 
      "subnetRef": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'),  'subnet-1')]", 
      "subnetPrefix": "10.0.0.0/24"
    }, 
    "virtualMachineImageRefDev": {
      "id": "[resourceId('Microsoft.Compute/images', variables('imageName'))]"
    }, 
    "virtualMachinePlan": {
      "publisher": "[variables('cloudpartner').publisherName]", 
      "product": "[variables('cloudpartner').offerName]", 
      "name": "[variables('cloudpartner').skuName]"
    }, 
    "bePoolName": "[concat(variables('lbName'), '-bepool')]", 
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]", 
    "probeName": "internalHealthCheck", 
    "imageName": "[concat(parameters('vmssName'), '-image')]", 
    "feIpConfigName": "[concat(variables('fePoolName'), 'IpConfig')]", 
    "virtualMachineImageRefProd": {
      "sku": "[variables('cloudpartner').skuName]", 
      "publisher": "[variables('cloudpartner').publisherName]", 
      "version": "[variables('cloudpartner').versionName]", 
      "offer": "[variables('cloudpartner').offerName]"
    }, 
    "vault": {
      "proxyProtocolName": "NetworkProxy-Protocol", 
      "instancesNumberName": "AppInstancesNumber", 
      "proxyPasswordName": "NetworkProxy-Password", 
      "tokenName": "AppToken", 
      "proxyPortName": "NetworkProxy-Port", 
      "proxyHostName": "NetworkProxy-Host", 
      "proxyUserName": "NetworkProxy-User"
    }, 
    "virtualNetworkName": "[concat(parameters('vmssName'), '-vnet')]", 
    "loadbalancer": {
      "feIpConfigId": "[concat(variables('lbID'),'/frontendIPConfigurations/', variables('feIpConfigName'))]", 
      "fePoolName": "[variables('fePoolName')]", 
      "feIpConfigName": "[variables('feIpConfigName')]", 
      "lbID": "[variables('lbID')]", 
      "bePoolID": "[concat(variables('lbID'), '/backendAddressPools/', variables('bePoolName'))]", 
      "bePoolName": "[variables('bePoolName')]"
    }
  }, 
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#", 
  "resources": [
    {
      "type": "Microsoft.Resources/deployments", 
      "name": "pid-e7cc2a30-ca39-5c52-a955-6c88b8b72597", 
      "apiVersion": "2018-02-01", 
      "properties": {
        "mode": "Incremental", 
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#", 
          "contentVersion": "1.0.0.0", 
          "resources": []
        }
      }
    }, 
    {
      "sku": {
        "name": "Standard_LRS"
      }, 
      "kind": "Storage", 
      "name": "[variables('diagStorageAccountName')]", 
      "tags": {
        "environment": "testing", 
        "displayName": "Snips Storage Account", 
        "parent": "[parameters('vmssName')]"
      }, 
      "apiVersion": "2018-02-01", 
      "location": "[resourceGroup().location]", 
      "type": "Microsoft.Storage/storageAccounts", 
      "properties": {}
    }, 
    {
      "condition": "[equals(parameters('production'), bool('false'))]", 
      "name": "[variables('imageName')]", 
      "tags": {
        "environment": "testing", 
        "displayName": "Linux Base Image", 
        "parent": "[parameters('vmssName')]"
      }, 
      "type": "Microsoft.Compute/images", 
      "properties": {
        "storageProfile": {
          "osDisk": {
            "caching": "ReadWrite", 
            "osType": "Linux", 
            "osState": "Generalized", 
            "storageAccountType": "Standard_LRS", 
            "blobUri": "[parameters('imageUrl')]"
          }
        }
      }, 
      "apiVersion": "2018-06-01", 
      "location": "[resourceGroup().location]"
    }, 
    {
      "name": "[concat('nsg-', parameters('vmssName'))]", 
      "tags": {
        "environment": "testing", 
        "displayName": "Snips Network Security Group", 
        "parent": "[parameters('vmssName')]"
      }, 
      "type": "Microsoft.Network/networkSecurityGroups", 
      "properties": {
        "securityRules": [
          {
            "name": "allow-ssh-traffic", 
            "properties": {
              "access": "allow", 
              "direction": "inbound", 
              "protocol": "tcp", 
              "priority": 1000, 
              "destinationPortRange": "22", 
              "sourceAddressPrefix": "*", 
              "destinationAddressPrefix": "*", 
              "sourcePortRange": "*"
            }
          }, 
          {
            "name": "allow-http-traffic", 
            "properties": {
              "access": "allow", 
              "direction": "inbound", 
              "protocol": "tcp", 
              "priority": 1020, 
              "destinationPortRange": "80", 
              "sourceAddressPrefix": "*", 
              "destinationAddressPrefix": "*", 
              "sourcePortRange": "*"
            }
          }, 
          {
            "name": "allow-https-traffic", 
            "properties": {
              "access": "allow", 
              "direction": "inbound", 
              "protocol": "tcp", 
              "priority": 1030, 
              "destinationPortRange": "443", 
              "sourceAddressPrefix": "*", 
              "destinationAddressPrefix": "*", 
              "sourcePortRange": "*"
            }
          }
        ]
      }, 
      "apiVersion": "2018-07-01", 
      "location": "[resourceGroup().location]"
    }, 
    {
      "name": "[variables('virtualNetworkName')]", 
      "tags": {
        "environment": "testing", 
        "displayName": "Snips Virtual Network", 
        "parent": "[parameters('vmssName')]"
      }, 
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', 'nsg-', parameters('vmssName'))]"
      ], 
      "type": "Microsoft.Network/virtualNetworks", 
      "properties": {
        "subnets": [
          {
            "properties": {
              "addressPrefix": "[variables('network').subnetPrefix]", 
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', parameters('vmssName') ))]"
              }
            }, 
            "name": "[variables('network').subnetName]", 
            "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('network').subnetName)]"
          }
        ], 
        "addressSpace": {
          "addressPrefixes": [
            "[variables('network').addressPrefix]"
          ]
        }
      }, 
      "apiVersion": "2015-06-15", 
      "location": "[resourceGroup().location]"
    }, 
    {
      "sku": {
        "name": "Standard"
      }, 
      "name": "[variables('network').publicIPAddressName]", 
      "tags": {
        "environment": "testing", 
        "displayName": "Snips Public IP Address", 
        "parent": "[parameters('vmssName')]"
      }, 
      "type": "Microsoft.Network/publicIPAddresses", 
      "properties": {
        "publicIPAllocationMethod": "Static", 
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }, 
      "apiVersion": "2018-04-01", 
      "location": "[resourceGroup().location]"
    }, 
    {
      "sku": {
        "name": "Standard"
      }, 
      "name": "[variables('lbName')]", 
      "tags": {
        "environment": "testing", 
        "displayName": "Snips VMSS Load Balancer", 
        "parent": "[parameters('vmssName')]"
      }, 
      "apiVersion": "2018-08-01", 
      "location": "[resourceGroup().location]", 
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('network').publicIPAddressName)]"
      ], 
      "type": "Microsoft.Network/loadBalancers", 
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('loadbalancer').feIpConfigName]", 
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('network').publicIPAddressName)]"
              }
            }
          }
        ], 
        "loadBalancingRules": [
          {
            "name": "SnipsRuleWS", 
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('loadbalancer').feIpConfigId]"
              }, 
              "protocol": "Tcp", 
              "backendPort": 80, 
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/probes/', variables('probeName'))]"
              }, 
              "enableFloatingIP": false, 
              "backendAddressPool": {
                "id": "[variables('loadbalancer').bePoolID]"
              }, 
              "frontendPort": 80, 
              "idleTimeoutInMinutes": 4
            }
          }, 
          {
            "name": "SnipsRuleWSS", 
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('loadbalancer').feIpConfigId]"
              }, 
              "protocol": "Tcp", 
              "backendPort": 443, 
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/probes/', variables('probeName'))]"
              }, 
              "enableFloatingIP": false, 
              "backendAddressPool": {
                "id": "[variables('loadbalancer').bePoolID]"
              }, 
              "frontendPort": 443, 
              "idleTimeoutInMinutes": 4
            }
          }
        ], 
        "backendAddressPools": [
          {
            "name": "[variables('loadbalancer').bePoolName]"
          }
        ], 
        "inboundNatPools": [
          {
            "name": "[variables('network').natPoolName]", 
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('loadbalancer').feIpConfigId]"
              }, 
              "backendPort": 22, 
              "protocol": "tcp", 
              "frontendPortRangeStart": 10022, 
              "frontendPortRangeEnd": 11022
            }
          }
        ], 
        "probes": [
          {
            "name": "[variables('probeName')]", 
            "properties": {
              "protocol": "Http", 
              "numberOfProbes": 2, 
              "intervalInSeconds": 5, 
              "port": 80, 
              "requestPath": "/internal/hc"
            }
          }
        ]
      }
    }, 
    {
      "sku": {
        "tier": "Standard", 
        "capacity": "[parameters('capacity')]", 
        "name": "[parameters('vmSize')]"
      }, 
      "name": "[parameters('vmssName')]", 
      "tags": {
        "environment": "testing", 
        "displayName": "Snips Virtual Machine Scale Set", 
        "parent": "[parameters('vmssName')]"
      }, 
      "apiVersion": "2017-03-30", 
      "plan": "[if(equals(parameters('production'), bool('true')), variables('virtualMachinePlan'), json('null'))]", 
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]", 
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]", 
        "[if(equals(parameters('production'), bool('false')), concat('Microsoft.Compute/images/', variables('imageName')), concat('Microsoft.Network/loadBalancers/', variables('lbName')))]"
      ], 
      "type": "Microsoft.Compute/virtualMachineScaleSets", 
      "properties": {
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": "[if(equals(parameters('production'), bool('false')), variables('virtualMachineImageRefDev'), variables('virtualMachineImageRefProd'))]"
          }, 
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "storageUri": "[reference(variables('diagStorageAccountName')).primaryEndpoints.blob]", 
              "enabled": true
            }
          }, 
          "extensionProfile": {
            "extensions": [
              {
                "name": "updatescriptextension", 
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions", 
                  "typeHandlerVersion": "2.0", 
                  "type": "CustomScript", 
                  "autoUpgradeMinorVersion": true, 
                  "settings": {
                    "commandToExecute": "[concat('echo ', parameters('keyVaultName'), ' > /var/www/vaultname.txt')]"
                  }
                }
              }
            ]
          }, 
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]", 
            "adminUsername": "[parameters('adminUsername')]", 
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]", 
            "adminPassword": "[parameters('adminPasswordOrKey')]"
          }, 
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('network').nicName]", 
                "properties": {
                  "primary": true, 
                  "ipConfigurations": [
                    {
                      "name": "[variables('network').ipConfigName]", 
                      "properties": {
                        "subnet": {
                          "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('network').subnetName)]"
                        }, 
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/inboundNatPools/', variables('network').natPoolName)]"
                          }
                        ], 
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/backendAddressPools/', variables('loadbalancer').bePoolName)]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }, 
        "upgradePolicy": {
          "mode": "Manual"
        }
      }, 
      "identity": {
        "type": "SystemAssigned"
      }, 
      "location": "[resourceGroup().location]"
    }, 
    {
      "name": "[concat('autoscalesettings-',parameters('vmssName'))]", 
      "tags": {
        "environment": "testing", 
        "displayName": "Snips VMSS Autoscale Settings", 
        "parent": "[parameters('vmssName')]"
      }, 
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]"
      ], 
      "type": "Microsoft.Insights/autoscaleSettings", 
      "properties": {
        "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]", 
        "enabled": true, 
        "name": "[concat('autoscalesettings-',parameters('vmssName'))]", 
        "profiles": [
          {
            "rules": [
              {
                "scaleAction": {
                  "direction": "Increase", 
                  "cooldown": "PT1M", 
                  "type": "ChangeCount", 
                  "value": "1"
                }, 
                "metricTrigger": {
                  "timeGrain": "PT1M", 
                  "timeWindow": "PT5M", 
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]", 
                  "operator": "GreaterThan", 
                  "metricNamespace": "", 
                  "statistic": "Average", 
                  "threshold": 40.0, 
                  "timeAggregation": "Average", 
                  "metricName": "Percentage CPU"
                }
              }, 
              {
                "scaleAction": {
                  "direction": "Decrease", 
                  "cooldown": "PT5M", 
                  "type": "ChangeCount", 
                  "value": "1"
                }, 
                "metricTrigger": {
                  "timeGrain": "PT1M", 
                  "timeWindow": "PT5M", 
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/',parameters('vmssName'))]", 
                  "operator": "LessThan", 
                  "metricNamespace": "", 
                  "statistic": "Average", 
                  "threshold": 30.0, 
                  "timeAggregation": "Average", 
                  "metricName": "Percentage CPU"
                }
              }
            ], 
            "capacity": {
              "default": "[parameters('capacity')]", 
              "minimum": "1", 
              "maximum": "20"
            }, 
            "name": "Profile1"
          }
        ]
      }, 
      "apiVersion": "2015-04-01", 
      "location": "[resourceGroup().location]"
    }, 
    {
      "name": "[parameters('keyVaultName')]", 
      "tags": {
        "environment": "testing", 
        "displayName": "Snips Vault", 
        "parent": "[parameters('vmssName')]"
      }, 
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]"
      ], 
      "type": "Microsoft.KeyVault/vaults", 
      "properties": {
        "sku": {
          "name": "Standard", 
          "family": "A"
        }, 
        "enabledForDiskEncryption": false, 
        "enabledForTemplateDeployment": true, 
        "enabledForDeployment": true, 
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]", 
            "objectId": "[reference(concat(resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName')),'/providers/Microsoft.ManagedIdentity/Identities/default'),'2015-08-31-PREVIEW').principalId]", 
            "permissions": {
              "secrets": [
                "Get", 
                "List"
              ]
            }
          }
        ], 
        "tenantId": "[subscription().tenantId]"
      }, 
      "apiVersion": "2018-02-14", 
      "location": "[resourceGroup().location]"
    }, 
    {
      "name": "[concat(parameters('keyVaultName'), '/', variables('vault').tokenName)]", 
      "tags": {
        "environment": "testing", 
        "parent": "[parameters('vmssName')]"
      }, 
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ], 
      "type": "Microsoft.KeyVault/vaults/secrets", 
      "properties": {
        "value": "[parameters('vaultSecretTokenValue')]"
      }, 
      "apiVersion": "2015-06-01"
    }, 
    {
      "name": "[concat(parameters('keyVaultName'), '/', variables('vault').instancesNumberName)]", 
      "tags": {
        "environment": "testing", 
        "parent": "[parameters('vmssName')]"
      }, 
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ], 
      "type": "Microsoft.KeyVault/vaults/secrets", 
      "properties": {
        "value": "[parameters('vaultSecretInstancesNumberValue')]"
      }, 
      "apiVersion": "2015-06-01"
    }, 
    {
      "name": "[concat(parameters('keyVaultName'), '/', variables('vault').proxyProtocolName)]", 
      "tags": {
        "environment": "testing", 
        "parent": "[parameters('vmssName')]"
      }, 
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ], 
      "type": "Microsoft.KeyVault/vaults/secrets", 
      "properties": {
        "value": "[parameters('vaultSecretNetworkProxyProtocol')]"
      }, 
      "apiVersion": "2015-06-01"
    }, 
    {
      "name": "[concat(parameters('keyVaultName'), '/', variables('vault').proxyHostName)]", 
      "tags": {
        "environment": "testing", 
        "parent": "[parameters('vmssName')]"
      }, 
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ], 
      "type": "Microsoft.KeyVault/vaults/secrets", 
      "properties": {
        "value": "[parameters('vaultSecretNetworkProxyHost')]"
      }, 
      "apiVersion": "2015-06-01"
    }, 
    {
      "name": "[concat(parameters('keyVaultName'), '/', variables('vault').proxyPortName)]", 
      "tags": {
        "environment": "testing", 
        "parent": "[parameters('vmssName')]"
      }, 
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ], 
      "type": "Microsoft.KeyVault/vaults/secrets", 
      "properties": {
        "value": "[parameters('vaultSecretNetworkProxyPort')]"
      }, 
      "apiVersion": "2015-06-01"
    }, 
    {
      "name": "[concat(parameters('keyVaultName'), '/', variables('vault').proxyUserName)]", 
      "tags": {
        "environment": "testing", 
        "parent": "[parameters('vmssName')]"
      }, 
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ], 
      "type": "Microsoft.KeyVault/vaults/secrets", 
      "properties": {
        "value": "[parameters('vaultSecretNetworkProxyUser')]"
      }, 
      "apiVersion": "2015-06-01"
    }, 
    {
      "name": "[concat(parameters('keyVaultName'), '/', variables('vault').proxyPasswordName)]", 
      "tags": {
        "environment": "testing", 
        "parent": "[parameters('vmssName')]"
      }, 
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ], 
      "type": "Microsoft.KeyVault/vaults/secrets", 
      "properties": {
        "value": "[parameters('vaultSecretNetworkProxyPassword')]"
      }, 
      "apiVersion": "2015-06-01"
    }
  ]
}