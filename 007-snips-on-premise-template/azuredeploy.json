{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmssName": {
      "type": "string",
      "defaultValue": "new-vmss-snips",
      "metadata": {
        "description": "Name of the Virtual Machine Scale Set (VMSS)."
      },
      "minLength": 3,
      "maxLength": 61
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "new-keyvault-snips-01",
      "metadata": {
        "description": "Name of the Vault."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2",
      "metadata": {
        "description": "Size of the virtual machines inside the VMSS."
      },
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3"
      ]
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "subnet-1",
      "metadata": {
        "description": "Name of the subnet in the virtual network you want to use."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "new-vmss-snips-dns",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the load balancer."
      }
    },
    "capacity": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (20 or less)."
      },
      "defaultValue": 2,
      "maxValue": 20
    },
    "vaultSecretTokenValue": {
      "type": "string",
      "defaultValue": "your-snips-token-from-the-snips-console",
      "metadata": {
        "description": "The token provided by Snips through the Snips console."
      }
    },
    "vaultSecretMagicNumberValue": {
      "type": "string",
      "defaultValue": "4",
      "metadata": {
        "description": "This is not for the final solution, but only for debugging and benchmarking purposes. As the names implies ... it is the magic number!"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machines."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "Password or ssh key for the Virtual Machine."
      }
    }
  },
  "variables": {
    "diagStorageAccountName": "[concat('strg', uniquestring(resourceGroup().id))]",
    "vaultSecretTokenName": "AppToken",
    "vaultSecretMagicNumberName": "AppMagicNumber",
    "virtualNetworkName": "[concat(parameters('vmssName'), '-vnet')]",
    "subnetRef": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'),  parameters('subnetName'))]",
    "lbName": "[concat(parameters('vmssName'), '-lb')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "bepoolName": "[concat(variables('lbName'), '-bepool')]",
    "fepoolName": "[concat(variables('lbName'), '-fepool')]",
    "feIpConfigName": "[concat(variables('fepoolName'), 'IpConfig')]",
    "feIpConfigId": "[concat(variables('lbID'),'/frontendIPConfigurations/', variables('feIpConfigName'))]",
    "bepoolID": "[concat(variables('lbID'),'/backendAddressPools/', variables('bepoolName'))]",
    "natPoolName": "[concat(variables('lbName'), 'natpool')]",
    "nicName": "[concat(parameters('vmssName'), 'nic')]",
    "ipConfigName": "[concat(parameters('vmssName'), 'ipconfig')]",
    "tcpProbeName": "tcpProbe",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "instanceCount": "2",
    "publicIPAddressName": "[concat(parameters('vmssName'), '-publicIp')]",
    "osDiskVhdUri": "https://storagesnips.blob.core.windows.net/mydisks/SnipsMegazordVHD20190204.vhd",
    "imageName": "[concat(parameters('vmssName'), '-image')]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('diagStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "testing",
        "displayName": "Snips Storage Account"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {},
      "apiVersion": "2018-02-01"
    },
    {
      "type": "Microsoft.Compute/images",
      "name": "[variables('imageName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "testing",
        "displayName": "Linux Base Image"
      },
      "properties": {
        "storageProfile": {
          "osDisk": {
            "osType": "Linux",
            "osState": "Generalized",
            "blobUri": "[variables('osDiskVhdUri')]",
            "caching": "ReadWrite",
            "storageAccountType": "Standard_LRS"
          }
        }
      },
      "apiVersion": "2018-04-01"
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[concat('nsg-', parameters('vmssName'))]",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "testing",
        "displayName": "Snips Network Security Group"
      },
      "properties": {
        "securityRules": [
          {
            "name": "allow-ssh-traffic",
            "properties": {
              "protocol": "tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "allow",
              "priority": 1000,
              "direction": "inbound"
            }
          },
          {
            "name": "allow-snips-traffic",
            "properties": {
              "protocol": "tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9000",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "allow",
              "priority": 1020,
              "direction": "inbound"
            }
          }
        ]
      },
      "apiVersion": "2018-07-01"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "testing",
        "displayName": "Snips Virtual Network"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', 'nsg-', parameters('vmssName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', parameters('subnetName'))]",
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('nsg-', parameters('vmssName') ))]"
              }
            }
          }
        ]
      },
      "apiVersion": "2015-06-15"
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "testing",
        "displayName": "Snips Public IP Address"
      },
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      },
      "apiVersion": "2018-04-01"
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('lbName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "tags": {
        "environment": "testing",
        "displayName": "Snips VMSS Load Balancer"
      },
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('feIpConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bepoolName')]"
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('natPoolName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('feIpConfigId')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": 10022,
              "frontendPortRangeEnd": 11022,
              "backendPort": 22
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "SnipsRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('feIpConfigId')]"
              },
              "backendAddressPool": {
                "id": "[variables('bepoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 9000,
              "backendPort": 9000,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/probes/', variables('tcpProbeName'))]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('tcpProbeName')]",
            "properties": {
              "protocol": "Tcp",
              "port": 9000,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      },
      "apiVersion": "2018-08-01"
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('vmssName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "testing",
        "displayName": "Snips Virtual Machine Scale Set"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Compute/images/', variables('imageName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('capacity')]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": {
              "id": "[resourceId('Microsoft.Compute/images', variables('imageName'))]"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', parameters('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/backendAddressPools/', variables('bePoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/inboundNatPools/', variables('natPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "updatescriptextension",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "commandToExecute": "[concat('echo ', parameters('keyVaultName'), ' > /var/www/vaultname.txt')]"
                  }
                }
              }
            ]
          }
        }
      },
      "apiVersion": "2017-03-30"
    },
    {
      "type": "Microsoft.Insights/autoscaleSettings",
      "name": "[concat('autoscalesettings-',parameters('vmssName'))]",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "testing",
        "displayName": "Snips VMSS Autoscale Settings"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]"
      ],
      "properties": {
        "name": "[concat('autoscalesettings-',parameters('vmssName'))]",
        "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]",
        "enabled": true,
        "profiles": [
          {
            "name": "Profile1",
            "capacity": {
              "minimum": "2",
              "maximum": "20",
              "default": "[parameters('capacity')]"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 40.0
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT1M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/',parameters('vmssName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 30.0
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT5M"
                }
              }
            ]
          }
        ]
      },
      "apiVersion": "2015-04-01"
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "testing",
        "displayName": "Snips Vault"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]"
      ],
      "properties": {
        "enabledForDeployment": true,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(concat(resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName')),'/providers/Microsoft.ManagedIdentity/Identities/default'),'2015-08-31-PREVIEW').principalId]",
            "permissions": {
              "secrets": [
                "Get",
                "List"
              ]
            }
          }
        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        }
      },
      "apiVersion": "2018-02-14"
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/', variables('vaultSecretTokenName'))]",
      "tags": {
        "environment": "testing"
      },
      "properties": {
        "value": "[parameters('vaultSecretTokenValue')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "apiVersion": "2015-06-01"
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/', variables('vaultSecretMagicNumberName'))]",
      "tags": {
        "environment": "testing"
      },
      "properties": {
        "value": "[parameters('vaultSecretMagicNumberValue')]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "apiVersion": "2015-06-01"
    }
  ],
  "outputs": {}
}